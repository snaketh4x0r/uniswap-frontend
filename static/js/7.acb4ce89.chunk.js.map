{"version":3,"sources":["components/AddressInputPanel/index.js","pages/Pool/CreateExchange.js"],"names":["InputPanel","styled","div","theme","flexColumnNoWrap","transparentize","shadowColor","inputBackground","ContainerRow","error","salmonRed","mercuryGray","InputContainer","LabelRow","flexRowNoWrap","doveGray","LabelContainer","InputRow","Input","input","royalBlue","placeholderGray","AddressInputPanel","title","initialInput","onChange","onError","t","useTranslation","library","useWeb3Context","useState","setInput","debouncedInput","useDebounce","address","undefined","name","data","setData","setError","useEffect","stale","isAddress","lookupAddress","then","catch","resolveName","type","autoComplete","autoCorrect","autoCapitalize","spellCheck","placeholder","event","target","value","checksummedInput","SummaryPanel","ExchangeRateWrapper","ExchangeRate","span","CreateExchangeWrapper","SummaryText","Flex","withRouter","history","location","account","factory","useFactoryContract","tokenAddress","setTokenAddress","tokenAddressError","setTokenAddressError","useTokenDetails","symbol","decimals","exchangeAddress","addTransaction","useTransactionAdder","state","replace","pathname","errorMessage","setErrorMessage","a","estimate","createExchange","estimatedGasLimit","gasLimit","response","ReactGA","category","action","ethers","constants","AddressZero","isValid","hideBottom","disabled","onClick"],"mappings":"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","file":"static/js/7.acb4ce89.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'react-i18next'\r\nimport { useWeb3Context } from 'web3-react'\r\nimport { transparentize } from 'polished'\r\n\r\nimport { isAddress } from '../../utils'\r\nimport { useDebounce } from '../../hooks'\r\n\r\nconst InputPanel = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap}\r\n  box-shadow: 0 4px 8px 0 ${({ theme }) => transparentize(0.95, theme.shadowColor)};\r\n  position: relative;\r\n  border-radius: 1.25rem;\r\n  background-color: ${({ theme }) => theme.inputBackground};\r\n  z-index: 1;\r\n`\r\n\r\nconst ContainerRow = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 1.25rem;\r\n  border: 1px solid ${({ error, theme }) => (error ? theme.salmonRed : theme.mercuryGray)};\r\n\r\n  background-color: ${({ theme }) => theme.inputBackground};\r\n`\r\n\r\nconst InputContainer = styled.div`\r\n  flex: 1;\r\n`\r\n\r\nconst LabelRow = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.doveGray};\r\n  font-size: 0.75rem;\r\n  line-height: 1rem;\r\n  padding: 0.75rem 1rem;\r\n`\r\n\r\nconst LabelContainer = styled.div`\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n`\r\n\r\nconst InputRow = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap}\r\n  align-items: center;\r\n  padding: 0.25rem 0.85rem 0.75rem;\r\n`\r\n\r\nconst Input = styled.input`\r\n  font-size: 1rem;\r\n  outline: none;\r\n  border: none;\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  background-color: ${({ theme }) => theme.inputBackground};\r\n\r\n  color: ${({ error, theme }) => (error ? theme.salmonRed : theme.royalBlue)};\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n\r\n  ::placeholder {\r\n    color: ${({ theme }) => theme.placeholderGray};\r\n  }\r\n`\r\n\r\nexport default function AddressInputPanel({ title, initialInput = '', onChange = () => {}, onError = () => {} }) {\r\n  const { t } = useTranslation()\r\n\r\n  const { library } = useWeb3Context()\r\n\r\n  const [input, setInput] = useState(initialInput)\r\n  const debouncedInput = useDebounce(input, 150)\r\n\r\n  const [data, setData] = useState({ address: undefined, name: undefined })\r\n  const [error, setError] = useState(false)\r\n\r\n  // keep data and errors in sync\r\n  useEffect(() => {\r\n    onChange({ address: data.address, name: data.name })\r\n  }, [onChange, data.address, data.name])\r\n  useEffect(() => {\r\n    onError(error)\r\n  }, [onError, error])\r\n\r\n  // run parser on debounced input\r\n  useEffect(() => {\r\n    let stale = false\r\n\r\n    if (isAddress(debouncedInput)) {\r\n      try {\r\n        library\r\n          .lookupAddress(debouncedInput)\r\n          .then(name => {\r\n            if (!stale) {\r\n              // if an ENS name exists, set it as the destination\r\n              if (name) {\r\n                setInput(name)\r\n              } else {\r\n                setData({ address: debouncedInput, name: '' })\r\n                setError(null)\r\n              }\r\n            }\r\n          })\r\n          .catch(() => {\r\n            if (!stale) {\r\n              setData({ address: debouncedInput, name: '' })\r\n              setError(null)\r\n            }\r\n          })\r\n      } catch {\r\n        setData({ address: debouncedInput, name: '' })\r\n        setError(null)\r\n      }\r\n    } else {\r\n      if (debouncedInput !== '') {\r\n        try {\r\n          library\r\n            .resolveName(debouncedInput)\r\n            .then(address => {\r\n              if (!stale) {\r\n                // if the debounced input name resolves to an address\r\n                if (address) {\r\n                  setData({ address: address, name: debouncedInput })\r\n                  setError(null)\r\n                } else {\r\n                  setError(true)\r\n                }\r\n              }\r\n            })\r\n            .catch(() => {\r\n              if (!stale) {\r\n                setError(true)\r\n              }\r\n            })\r\n        } catch {\r\n          setError(true)\r\n        }\r\n      }\r\n    }\r\n\r\n    return () => {\r\n      stale = true\r\n    }\r\n  }, [debouncedInput, library, onChange, onError])\r\n\r\n  function onInput(event) {\r\n    if (data.address !== undefined || data.name !== undefined) {\r\n      setData({ address: undefined, name: undefined })\r\n    }\r\n    if (error !== undefined) {\r\n      setError()\r\n    }\r\n    const input = event.target.value\r\n    const checksummedInput = isAddress(input)\r\n    setInput(checksummedInput || input)\r\n  }\r\n\r\n  return (\r\n    <InputPanel>\r\n      <ContainerRow error={input !== '' && error}>\r\n        <InputContainer>\r\n          <LabelRow>\r\n            <LabelContainer>\r\n              <span>{title || t('recipientAddress')}</span>\r\n            </LabelContainer>\r\n          </LabelRow>\r\n          <InputRow>\r\n            <Input\r\n              type=\"text\"\r\n              autoComplete=\"off\"\r\n              autoCorrect=\"off\"\r\n              autoCapitalize=\"off\"\r\n              spellCheck=\"false\"\r\n              placeholder=\"0x1234...\"\r\n              error={input !== '' && error}\r\n              onChange={onInput}\r\n              value={input}\r\n            />\r\n          </InputRow>\r\n        </InputContainer>\r\n      </ContainerRow>\r\n    </InputPanel>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { withRouter } from 'react-router'\r\nimport { useWeb3Context } from 'web3-react'\r\nimport { ethers } from 'ethers'\r\nimport styled from 'styled-components'\r\nimport { useTranslation } from 'react-i18next'\r\nimport ReactGA from 'react-ga'\r\n\r\nimport { Button } from '../../theme'\r\nimport AddressInputPanel from '../../components/AddressInputPanel'\r\nimport OversizedPanel from '../../components/OversizedPanel'\r\nimport { useFactoryContract } from '../../hooks'\r\nimport { useTokenDetails } from '../../contexts/Tokens'\r\nimport { useTransactionAdder } from '../../contexts/Transactions'\r\n\r\nconst SummaryPanel = styled.div`\r\n  ${({ theme }) => theme.flexColumnNoWrap};\r\n  padding: 1rem 0;\r\n`\r\n\r\nconst ExchangeRateWrapper = styled.div`\r\n  ${({ theme }) => theme.flexRowNoWrap};\r\n  align-items: center;\r\n  color: ${({ theme }) => theme.doveGray};\r\n  font-size: 0.75rem;\r\n  padding: 0.25rem 1rem 0;\r\n`\r\n\r\nconst ExchangeRate = styled.span`\r\n  flex: 1 1 auto;\r\n  width: 0;\r\n  color: ${({ theme }) => theme.doveGray};\r\n`\r\n\r\nconst CreateExchangeWrapper = styled.div`\r\n  color: ${({ theme }) => theme.doveGray};\r\n  text-align: center;\r\n  margin-top: 1rem;\r\n  padding-top: 1rem;\r\n`\r\n\r\nconst SummaryText = styled.div`\r\n  font-size: 0.75rem;\r\n  color: ${({ error, theme }) => error && theme.salmonRed};\r\n`\r\n\r\nconst Flex = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 2rem;\r\n\r\n  button {\r\n    max-width: 20rem;\r\n  }\r\n`\r\n\r\nfunction CreateExchange({ history, location }) {\r\n  const { t } = useTranslation()\r\n  const { account } = useWeb3Context()\r\n  const factory = useFactoryContract()\r\n\r\n  const [tokenAddress, setTokenAddress] = useState({\r\n    address: '',\r\n    name: ''\r\n  })\r\n  const [tokenAddressError, setTokenAddressError] = useState()\r\n\r\n  const { name, symbol, decimals, exchangeAddress } = useTokenDetails(tokenAddress.address)\r\n  const addTransaction = useTransactionAdder()\r\n\r\n  // clear location state, if it exists\r\n  useEffect(() => {\r\n    if (location.state) {\r\n      history.replace(location.pathname)\r\n    }\r\n  }, []) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  // validate everything\r\n  const [errorMessage, setErrorMessage] = useState(!account && t('noWallet'))\r\n  useEffect(() => {\r\n    if (tokenAddressError) {\r\n      setErrorMessage(t('invalidTokenAddress'))\r\n    } else if (symbol === undefined || decimals === undefined || exchangeAddress === undefined) {\r\n      setErrorMessage()\r\n    } else if (symbol === null) {\r\n      setErrorMessage(t('invalidSymbol'))\r\n    } else if (decimals === null) {\r\n      setErrorMessage(t('invalidDecimals'))\r\n    } else if (exchangeAddress !== ethers.constants.AddressZero) {\r\n      setErrorMessage(t('exchangeExists'))\r\n    } else if (!account) {\r\n      setErrorMessage(t('noWallet'))\r\n    } else {\r\n      setErrorMessage(null)\r\n    }\r\n\r\n    return () => {\r\n      setErrorMessage()\r\n    }\r\n  }, [tokenAddress.address, symbol, decimals, exchangeAddress, account, t, tokenAddressError])\r\n\r\n  async function createExchange() {\r\n    const estimatedGasLimit = await factory.estimate.createExchange(tokenAddress.address)\r\n\r\n    factory.createExchange(tokenAddress.address, { gasLimit: estimatedGasLimit }).then(response => {\r\n      ReactGA.event({\r\n        category: 'Pool',\r\n        action: 'CreateExchange'\r\n      })\r\n\r\n      addTransaction(response)\r\n    })\r\n  }\r\n\r\n  const isValid = errorMessage === null\r\n\r\n  return (\r\n    <>\r\n      <AddressInputPanel\r\n        title={t('tokenAddress')}\r\n        initialInput={(location.state && location.state.tokenAddress) || ''}\r\n        onChange={setTokenAddress}\r\n        onError={setTokenAddressError}\r\n      />\r\n      <OversizedPanel hideBottom>\r\n        <SummaryPanel>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>{t('name')}</ExchangeRate>\r\n            <span>{name ? name : ' - '}</span>\r\n          </ExchangeRateWrapper>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>{t('symbol')}</ExchangeRate>\r\n            <span>{symbol ? symbol : ' - '}</span>\r\n          </ExchangeRateWrapper>\r\n          <ExchangeRateWrapper>\r\n            <ExchangeRate>{t('decimals')}</ExchangeRate>\r\n            <span>{decimals || decimals === 0 ? decimals : ' - '}</span>\r\n          </ExchangeRateWrapper>\r\n        </SummaryPanel>\r\n      </OversizedPanel>\r\n      <CreateExchangeWrapper>\r\n        <SummaryText>{errorMessage ? errorMessage : t('enterTokenCont')}</SummaryText>\r\n      </CreateExchangeWrapper>\r\n      <Flex>\r\n        <Button disabled={!isValid} onClick={createExchange}>\r\n          {t('createExchange')}\r\n        </Button>\r\n      </Flex>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(CreateExchange)\r\n"],"sourceRoot":""}